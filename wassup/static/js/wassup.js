'use strict';var index_of_sups = 0;var num_of_sups = 0;var lst_sups = [];var id_of_user = null;var name_of_user = null;var URL = null;var num_of_request = 0;window.onresize = function(){	drawSups();	if (document.body.offsetWidth <= 760) {		document.getElementById("contact_list").multiple = false;	}	else {		document.getElementById("contact_list").multiple = true;	}}window.addEventListener('load', function() {	var temp = document.cookie.split("=");	index_of_sups = 0;	id_of_user = temp[1];	URL = localStorage.getItem("URL");		console.log("current cookie: " +  id_of_user);	console.log("current URL: " + localStorage.getItem("URL"));		var path = window.location.pathname;	var page = path.split("/").pop();	if (page == "login") {		var btn_pri = document.getElementById("login_private");		var btn_pub = document.getElementById("login_public");				btn_pri.addEventListener("click", function(evt) {			btn_pri.className = "login_private_clicked";		    btn_pub.className = "login_public";		    console.log("private_mode");		    localStorage.setItem("URL", "http://localhost:8080/post");		}, false);		    			btn_pub.addEventListener("click", function(evt) {		   	btn_pri.className = "login_private";		    btn_pub.className = "login_public_clicked";		    console.log("public_mode");		    localStorage.setItem("URL", "http://104.197.3.113/post");		}, false);	}		else if (page != "login") {		console.log(localStorage.getItem("full_name"));				if (document.body.offsetWidth <= 760) {			document.getElementById("contact_list").multiple = false;		}		else {			document.getElementById("contact_list").multiple = true;		}		var app_pri = document.getElementById("btn_private");		var app_pub = document.getElementById("btn_public");		if (URL == "http://104.197.3.113/post") {			app_pri.className = "private_btn";			app_pub.className = "public_btn_clicked"		}				app_pri.addEventListener("click", function(evt) {			app_pri.className = "private_btn_clicked";		    app_pub.className = "public_btn";		    console.log("private_mode");		    localStorage.setItem("URL", "http://localhost:8080/post");		}, false);		    			app_pub.addEventListener("click", function(evt) {		   	app_pri.className = "private_btn";		    app_pub.className = "public_btn_clicked";		    console.log("public_mode");		    localStorage.setItem("URL", "http://104.197.3.113/post");		}, false);	        // load contact list        load_contact_list();        // Show number of "sups" and Draw Canvas with "Sups!"        var objectToSend = {"user_id":id_of_user, "protocol_version":"1.3",        "message_id":generateUUID(),"command":"get_sups","command_data":""};        makeRequest(objectToSend, function (returnObj) {        	num_of_sups = returnObj.reply_data.length;        	lst_sups = returnObj.reply_data;        	lst_sups.reverse();        	drawSups();        });                var welcome = document.getElementById("testabc");        welcome.innerText = "Welcome, " + localStorage.getItem("full_name");                        setInterval(function () {        	var objectToSend = {"user_id":id_of_user, "protocol_version":"1.3",        	"message_id":generateUUID(),"command":"get_sups","command_data":""};        	makeRequest(objectToSend, function (returnObj) {        		num_of_sups = returnObj.reply_data.length;        		lst_sups = returnObj.reply_data;        		lst_sups.reverse();        		drawSups();        		showErrorMessage("Page will refresh every minute.");        	});        }, 60000);        console.log("reloading page");        showErrorMessage("Hold Command or Ctrl to select multiple users!");    }});function showErrorMessage(err) {		var errorBoard = document.getElementById("err_board");	if (errorBoard.className == "err_board_app_show") {		errorBoard.className = "err_board_app";		setTimeout(function () {			errorBoard.className = "err_board_app_show";			var err_msg = document.getElementById("err_msg");			err_msg.innerText = err;		}, 500);	}	else {		errorBoard.className = "err_board_app_show";		var err_msg = document.getElementById("err_msg");		err_msg.innerText = err;	}}// Send request to server.function makeRequest(objectToSend, callback){	console.log("connect to server...");	var loader = document.getElementById("loader");	var loading_page = document.getElementById("loading_page");	loader.className = "loader_show";	loading_page.className = "loading_show";	num_of_request ++;    var httpRequest = new XMLHttpRequest();        httpRequest.open("POST", URL);        httpRequest.setRequestHeader("Content-Type", "application/json");    httpRequest.addEventListener("readystatechange", function() {        if (httpRequest.readyState === 4 && httpRequest.status === 200) {        	console.log("connect successful!");        	num_of_request --;        	if (num_of_request == 0) {        		console.log("done");        		loader.className = "loader";        		loading_page.className = "loading";        	}            callback(JSON.parse(httpRequest.responseText));        }    });    httpRequest.send(JSON.stringify(objectToSend));}// Used for generate unique id for each message sent. snippet from http://stackoverflow.com/a/8809472function generateUUID(){    var d = new Date().getTime();    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {        var r = (d + Math.random()*16)%16 | 0;        d = Math.floor(d/16);        return (c=='x' ? r : (r&0x3|0x8)).toString(16);    });    return uuid;};function hide_err() {	var err_board = document.getElementById("err_board");	if (err_board.className == "err_board_app_show") {		err_board.className = "err_board_app";	}	else {		err_board.className = "err_board";	}	}// check whether the login information is complete.function validateForm() {	console.log("validateForm()");    var x = document.forms["login_field"]["user_id"].value;    var y = document.forms["login_field"]["full_name"].value;    var err_msg = document.getElementById("err_msg");    var err_board = document.getElementById("err_board");    var id_field = document.getElementById("user_id");    var name_field = document.getElementById("full_name");                if (x == null && y == null || x == null && y == "" || x == "" && y == null || x == "" && y == "") {    	id_field.className = "id_field_warning";    	name_field.className = "name_field_warning";    	err_msg.innerText = "You forgot fill out both Username and Full Name D:";    	if (err_board.className == "err_board_show"){    		err_board.className = "err_board";    		setTimeout(function(){err_board.className = "err_board_show";}, 300);    	}    	else {    		setTimeout(function(){err_board.className = "err_board_show";}, 300);    	}    }    else if (x == null || x == "") {        id_field.className = "id_field_warning";        name_field.className = "name_field";        err_msg.innerText = "You forgot fill out the Username D:";        if (err_board.className == "err_board_show"){        	err_board.className = "err_board";        	setTimeout(function(){err_board.className = "err_board_show";}, 300);        }        else {        	setTimeout(function(){err_board.className = "err_board_show";}, 300);        }    }    else if (y == null || y == "") {        id_field.className = "id_field";        name_field.className = "name_field_warning";        err_msg.innerText = "You forgot fill out the Full Name D:";        if (err_board.className == "err_board_show"){        	err_board.className = "err_board";        	setTimeout(function(){err_board.className = "err_board_show";}, 300);        }        else {        	setTimeout(function(){err_board.className = "err_board_show";}, 300);        }    }    else {    	// check if the user id is exist in server    	URL = localStorage.getItem("URL");    	console.log("send request to: " + URL);    	var objectToSend = {"user_id":x, "protocol_version":"1.3","message_id":generateUUID(),"command":"user_exists","command_data":{"user_id":x}};    	makeRequest(objectToSend, function (returnObj) {    		console.log(returnObj);    		// user id existed    		if (returnObj.reply_data.exists) {    			// and full name was matched with user id    			if (y == returnObj.reply_data.full_name) {    				name_of_user = returnObj.reply_data.full_name;    				localStorage.setItem("full_name", y);    				document.getElementById("login_form").submit();    			}    			// full name did not match with user id    			else {    				id_field.className = "id_field";    				name_field.className = "name_field_warning";    				err_msg.innerText = "Sorry but Full Name did not match user id D:";    				if (err_board.className == "err_board_show"){    					err_board.className = "err_board";    					setTimeout(function(){err_board.className = "err_board_show";}, 300);    				}    				else {    					setTimeout(function(){err_board.className = "err_board_show";}, 300);    				}    			}    		}    		// user id does not existed, will create new one.    		else {    			var objectToSend = {"user_id":x, "protocol_version":"1.3","message_id":generateUUID(),"command":"create_user","command_data":{"user_id":x, full_name:y}};    			makeRequest(objectToSend, function (tempObj) {    				name_of_user = returnObj.reply_data.full_name;    				localStorage.setItem("full_name", y);    				document.getElementById("login_form").submit();    			});    			    		}    	});	    }}// Logout out confirm in case user clicked by accident.function logout() {	if (confirm("Do you really want to logout? :(")) {	    return true;	} else {	    return false;	}}function private_btn() {	URL = "http://localhost:8080/post";		index_of_sups = 0;	num_of_sups = 0;	lst_sups = {};		load_contact_list();		var objectToSend = {"user_id":id_of_user, "protocol_version":"1.3","message_id":generateUUID(),"command":"get_sups","command_data":""};	makeRequest(objectToSend, function (returnObj) {				num_of_sups = returnObj.reply_data.length;		lst_sups = returnObj.reply_data;		lst_sups.reverse();		drawSups();		showErrorMessage("Now you are in private server!");	});}function public_btn() {	var objectToSend = {"user_id":id_of_user, "protocol_version":"1.3","message_id":generateUUID(),"command":"user_exists","command_data":{"user_id":id_of_user}};	makeRequest(objectToSend, function (returnObj) {		name_of_user = returnObj.reply_data.full_name;	});		URL = "http://104.197.3.113/post";	console.log(id_of_user);	var objectToSend = {"user_id":id_of_user, "protocol_version":"1.3","message_id":generateUUID(),"command":"user_exists","command_data":{"user_id":id_of_user}};	makeRequest(objectToSend, function (returnObj) {		if (!returnObj.reply_data.exists){			var objectToSend = {"user_id":id_of_user, "protocol_version":"1.3","message_id":generateUUID(),"command":"create_user","command_data":{"user_id":id_of_user, "full_name":name_of_user}};			makeRequest(objectToSend, function (tempObj) {			});		}		else {			//console.log(returnObj);		}	});		index_of_sups = 0;	num_of_sups = 0;	lst_sups = {};		load_contact_list();		var objectToSend = {"user_id":id_of_user, "protocol_version":"1.3","message_id":generateUUID(),"command":"get_sups","command_data":""};	makeRequest(objectToSend, function (returnObj) {				num_of_sups = returnObj.reply_data.length;		lst_sups = returnObj.reply_data;		lst_sups.reverse();		drawSups();		showErrorMessage("Now you are in public server!");	});	}function drawSups() {	var tempSpan = document.getElementById("num_sup");	tempSpan.innerText = num_of_sups;		var sups_canvas = document.getElementById("sups_canvas");	var parentDiv = document.getElementById("right_side");	var canHeight = parentDiv.offsetHeight - 110;	var canWidth = parentDiv.offsetWidth;		sups_canvas.height = 300;	sups_canvas.width = canWidth;	sups_canvas.height = canHeight;	var ctx = sups_canvas.getContext("2d");	var sups = lst_sups[index_of_sups];		ctx.clearRect (0 , 0 , sups_canvas.width, sups_canvas.height );		if (num_of_sups == 0) {		ctx.font = 'italic ' + canHeight * 0.1 + 'pt Calibri';		ctx.fillText("No sups :(", canWidth * 0.05, canHeight * 0.2);	}	else {				ctx.font = canHeight * 0.03 + 'pt Calibri';		ctx.fillText(index_of_sups + 1 + "/" + num_of_sups, canWidth * 0.03, canHeight * 0.1);						var senderName = null;		var friendList = document.getElementById("contact_list");		for (var i = 0; i < friendList.length; i++) {			if (friendList[i].value == sups.sender_id) {				senderName = friendList[i].textContent;			}		}		if (senderName == null) {			var posY = ctx.measureText("From: " + sups.sender_id + " (ID)").width >= ctx.measureText(sups.date).width ? ctx.measureText("From: " + sups.sender_id + " (ID)").width : ctx.measureText(sups.date).width;			ctx.fillText("From: " + sups.sender_id + " (ID)", canWidth - posY - 20, canHeight * 0.85);			ctx.fillText(sups.date, canWidth - posY - 20, canHeight * 0.9);		}		else {			var posY = ctx.measureText("From: " + senderName + " (" + sups.sender_id + ").").width >= ctx.measureText(sups.date).width ? ctx.measureText("From: " + senderName + " (" + sups.sender_id + ").").width : ctx.measureText(sups.date).width;			ctx.fillText("From: " + senderName + " (" + sups.sender_id + ").", canWidth - posY - 20, canHeight * 0.85);			ctx.fillText(sups.date, canWidth - posY - 20, canHeight * 0.9);		}				ctx.save();				ctx.translate(canWidth * 0.4, canHeight * 0.45);		ctx.rotate(Math.floor(Math.random() * 360)*Math.PI/180);		//ctx.translate(-10, 10);		var size = Math.floor(Math.random() * 10) + canHeight * 0.3;				var size_str = 'italic ' + size + 'pt Calibri'				ctx.font = size_str;		ctx.fillStyle = getRandomColor();		ctx.textAlign = "center";		ctx.fillText("Sup?", 0, 0);				ctx.restore();			}	}// generate random color, snippet from http://stackoverflow.com/questions/1484506/random-color-generator-in-javascriptfunction getRandomColor() {    var letters = '0123456789ABCDEF'.split('');    var color = '#';    for (var i = 0; i < 6; i++ ) {        color += letters[Math.floor(Math.random() * 16)];    }    return color;}function delete_all() {	if (lst_sups.length == 0) {		showErrorMessage("You don't have any sups yet.");		return;	}	if (confirm("Do you really want delete all the sups? :(")) {	    var objectToSend = {"user_id":id_of_user, "protocol_version":"1.3","message_id":generateUUID(),"command":"clear_sups","command_data":{"user_id":id_of_user}};	    	makeRequest(objectToSend, function (returnObj) {	    	index_of_sups = 0;	    	num_of_sups = 0;	    	lst_sups = {};	    	drawSups();	    	showErrorMessage("All the Sup! has been deleted.");	    });	} else {	    showErrorMessage("Nothing have been deleted. :D");	}			}function delete_sups() {			if (num_of_sups == 0) {			}		else if (index_of_sups + 1 == num_of_sups) {		console.log(lst_sups[index_of_sups].sup_id);				var tempId = lst_sups[index_of_sups].sup_id;		console.log(tempId);		var objectToSend = {"user_id":id_of_user, "protocol_version":"1.3","message_id":generateUUID(),"command":"remove_sup","command_data":{"sup_id":tempId}};		makeRequest(objectToSend, function (returnObj) {			showErrorMessage("Sup! has been deleted.");		});		delete lst_sups[index_of_sups];		var newArray = new Array();		for(var i = 0; i<lst_sups.length; i++){			if (lst_sups[i]){				newArray.push(lst_sups[i]);			}		}		lst_sups = newArray;				index_of_sups --;		num_of_sups --;				drawSups();			}		else {		console.log(lst_sups[index_of_sups].sup_id);				var tempId = lst_sups[index_of_sups].sup_id;		console.log(tempId);		var objectToSend = {"user_id":id_of_user, "protocol_version":"1.3","message_id":generateUUID(),"command":"remove_sup","command_data":{"sup_id":tempId}};		makeRequest(objectToSend, function (returnObj) {			showErrorMessage("Sup! has been deleted.");		});		delete lst_sups[index_of_sups];						var newArray = new Array();		for(var i = 0; i<lst_sups.length; i++){			if (lst_sups[i]){				newArray.push(lst_sups[i]);			}		}		lst_sups = newArray;				num_of_sups --;		console.log(lst_sups[0]);		drawSups();	}	console.log(lst_sups);}function load_contact_list() {	var contact_list = document.getElementById('contact_list');		while (contact_list.length != 0) {		contact_list.remove(0);	}		var objectToSend = {"user_id":id_of_user, "protocol_version":"1.3","message_id":generateUUID(),"command":"get_friends","command_data":{"user_id":id_of_user}};	makeRequest(objectToSend, function (returnObj) {		console.log(returnObj);		_.each(			returnObj.reply_data,		    function(contact) {		    	var opt = document.createElement('option');		    	opt.text = contact.full_name;		    	opt.value = contact.user_id;		    	opt.className = "contact_option";		    	contact_list.appendChild(opt);		    }		);	});}function show_delete_panel() {	var del_btn = document.getElementById("delete_panel");	del_btn.className = "delete_panel_show";}function delete_contact() {		var selected = document.getElementById("contact_list").value;	var objectToSend = {"user_id":id_of_user, "protocol_version":"1.3","message_id":generateUUID(),"command":"remove_friend","command_data":{"user_id":selected}};	makeRequest(objectToSend, function (returnObj) {		load_contact_list();		showErrorMessage("friend delete successful! :(");	});	}function hide_delete_btn() {	var delete_panel = document.getElementById("delete_panel");	delete_panel.className = "delete_panel";}function add_contact() {	var contact_id = document.getElementById("add_contact_field").value;	if (contact_id == null || contact_id == "") {		showErrorMessage("I cannot add contact if you didn't fill out user id. :(");	}	else {		for (var i = 0; i < document.getElementById("contact_list").length; ++i){		    if (document.getElementById("contact_list").options[i].value == contact_id){		      showErrorMessage("the user you entered is alreay in your contact list :D");		      return;		    }		}			var objectToSend = {"user_id":id_of_user, "protocol_version":"1.3","message_id":generateUUID(),"command":"add_friend_if_exists","command_data":{"user_id":contact_id}};		makeRequest(objectToSend, function (returnObj) {			if (returnObj.reply_data.exists) {				//var objectToSend = {"protocol_version":"1.3","message_id":generateUUID(),"command":"add_friend","command_data":{"user_id":contact_id}};				//makeRequest(objectToSend, function (returnObj) {					load_contact_list();					showErrorMessage("Added successful! :D");				//});							}			else {				showErrorMessage("Sorry, the user id you entered is not exists. :(");			}		});	}}function send_msg() {		var target = document.getElementById("contact_list");	if (target.value == null || target.value == "") {		showErrorMessage("Please select a contact. :D");	}	else {		for (var i = 0; i < target.options.length; i++) {			if (target.options[i].selected) {				console.log(target.options[i].value);								var date = new Date();				var monthNames = ["January", "February", "March", "April",				"May", "June", "July", "August", "September", "October",				"November", "December"];				var ampm = date.getHours() >= 12 ? 'pm' : 'am';				var tempMins = date.getMinutes() < 10? '0' + date.getMinutes() : date.getMinutes(); 				var tempDate = monthNames[date.getMonth()] + " " + date.getDate() + ", " + date.getFullYear() + ". " + date.getHours() + ":" + tempMins + ampm;				var objectToSend = {"user_id":id_of_user, "protocol_version":"1.3","message_id":generateUUID(),"command":"send_sup","command_data":{"user_id":target.options[i].value, sup_id:generateUUID(), date:tempDate}};				makeRequest(objectToSend, function (returnObj) {					showErrorMessage("Sup! send successful! :D");				});							}		}	}}function previous() {	if (index_of_sups + 1 <= 1) {			}	else {				index_of_sups --;		drawSups();	}}function next() {	if (index_of_sups + 1 >= num_of_sups) {			}	else {		index_of_sups ++;		drawSups();	}}